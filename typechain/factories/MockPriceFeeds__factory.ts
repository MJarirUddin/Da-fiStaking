/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockPriceFeeds,
  MockPriceFeedsInterface,
} from "../MockPriceFeeds";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getThePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061012f806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80638c3c9a5514603757806391b7f5ed146051575b600080fd5b603d6069565b6040516048919060c2565b60405180910390f35b6067600480360381019060639190608f565b6072565b005b60008054905090565b8060008190555050565b60008135905060898160e5565b92915050565b60006020828403121560a057600080fd5b600060ac84828501607c565b91505092915050565b60bc8160db565b82525050565b600060208201905060d5600083018460b5565b92915050565b6000819050919050565b60ec8160db565b811460f657600080fd5b5056fea2646970667358221220264933d1204f8f2d2426b701a6512a10e2c42619e8725e6c3fda3006d822cdc064736f6c63430008000033";

export class MockPriceFeeds__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPriceFeeds> {
    return super.deploy(overrides || {}) as Promise<MockPriceFeeds>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockPriceFeeds {
    return super.attach(address) as MockPriceFeeds;
  }
  connect(signer: Signer): MockPriceFeeds__factory {
    return super.connect(signer) as MockPriceFeeds__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceFeedsInterface {
    return new utils.Interface(_abi) as MockPriceFeedsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceFeeds {
    return new Contract(address, _abi, signerOrProvider) as MockPriceFeeds;
  }
}
